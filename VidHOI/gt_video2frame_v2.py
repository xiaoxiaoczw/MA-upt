from cv2 import imwrite
import os
import json
import pickle


# zhuyao haishi dui json file jinxing caozuo
# ruhe duqu dict bing jinxing zuhe shi zuizhongyao de
#



if __name__ == '__main__':

    total_frames = 0
    # result_dir = '/home/student-pc/MA/dataset/Vidhoi/validation-annotation/validation'
    result_dir = '/home/student-pc/MA/dataset/Vidhoi/validation-video'
    result_json = 'val_frame_annots.json'

    # output_path = '/home/student-pc/MA/dataset/Vidhoi/validation_frame_anno_v1'
    output_path = '/home/student-pc/MA/dataset/Vidhoi/validation_frame_anno_v2'
    # output_path = '/home/student-pc/pycharmProject/upt-38/upt/vidhoi/validation-video/frames'

    # all dict idx by the video-id
    datameta = {}
    annotation = {}
    file_name = {}
    img_size = {}

    curr_annotation = []
    curr_file_name = []
    curr_img_size = []

    objects_name = [
        "person", "car", "guitar", "chair", "handbag", "toy", "baby_seat", "cat", "bottle", "backpack",
        "motorcycle", "ball/sports_ball", "laptop", "table", "surfboard", "camera", "sofa",
        "screen/monitor", "bicycle", "vegetables", "dog", "fruits", "cake", "cellphone", "cup",
        "bench", "snowboard", "skateboard", "bread", "bus/truck", "ski", "suitcase", "stool", "bat",
        "elephant", "fish", "baby_walker", "dish", "watercraft", "scooter", "pig", "refrigerator",
        "horse", "crab", "bird", "piano", "cattle/cow", "lion", "chicken", "camel", "electric_fan",
        "toilet", "sheep/goat", "rabbit", "train", "penguin", "hamster/rat", "snake", "frisbee",
        "aircraft", "oven", "racket", "faucet", "antelope", "duck", "stop_sign", "sink", "kangaroo",
        "stingray", "turtle", "tiger", "crocodile", "bear", "microwave", "traffic_light", "panda",
        "leopard", "squirrel"
    ]
    verbs_name = [
        "lean_on", "watch", "above", "next_to", "behind", "away", "towards", "in_front_of", "hit",
        "hold", "wave", "pat", "carry", "point_to", "touch", "play(instrument)", "release", "ride",
        "grab", "lift", "use", "press", "inside", "caress", "pull", "get_on", "cut", "hug", "bite",
        "open", "close", "throw", "kick", "drive", "get_off", "push", "wave_hand_to", "feed", "chase",
        "kiss", "speak_to", "beneath", "smell", "clean", "lick", "squeeze", "shake_hand_with", "knock",
        "hold_hand_of", "shout_at"
    ]
    correspondence = [[0, 4, 4], [1, 4, 17], [2, 4, 25], [3, 4, 30], [4, 4, 41], [5, 4, 52], [6, 4, 76],
                      [7, 4, 87], [8, 4, 111], [9, 4, 57], [10, 1, 8], [11, 1, 36], [12, 1, 41], [13, 1, 43],
                      [14, 1, 37], [15, 1, 62], [16, 1, 71], [17, 1, 75], [18, 1, 76], [19, 1, 87], [20, 1, 98],
                      [21, 1, 110], [22, 1, 111], [23, 1, 57], [24, 14, 10], [25, 14, 26], [26, 14, 36],
                      [27, 14, 65], [28, 14, 74], [29, 14, 112], [30, 14, 57], [31, 8, 4], [32, 8, 21],
                      [33, 8, 25], [34, 8, 41], [35, 8, 43], [36, 8, 47], [37, 8, 75], [38, 8, 76], [39, 8, 77],
                      [40, 8, 79], [41, 8, 87], [42, 8, 93], [43, 8, 105], [44, 8, 111], [45, 8, 57], [46, 39, 8],
                      [47, 39, 20], [48, 39, 36], [49, 39, 41], [50, 39, 48], [51, 39, 58], [52, 39, 69],
                      [53, 39, 57], [54, 5, 4], [55, 5, 17], [56, 5, 21], [57, 5, 25], [58, 5, 41], [59, 5, 52],
                      [60, 5, 76], [61, 5, 87], [62, 5, 111], [63, 5, 113], [64, 5, 57], [65, 2, 4], [66, 2, 17],
                      [67, 2, 21], [68, 2, 38], [69, 2, 41], [70, 2, 43], [71, 2, 52], [72, 2, 62], [73, 2, 76],
                      [74, 2, 111], [75, 2, 57], [76, 15, 22], [77, 15, 26], [78, 15, 36], [79, 15, 39],
                      [80, 15, 45], [81, 15, 65], [82, 15, 80], [83, 15, 111], [84, 15, 10], [85, 15, 57],
                      [86, 56, 8], [87, 56, 36], [88, 56, 49], [89, 56, 87], [90, 56, 93], [91, 56, 57],
                      [92, 57, 8], [93, 57, 49], [94, 57, 87], [95, 57, 57], [96, 19, 26], [97, 19, 34],
                      [98, 19, 36], [99, 19, 39], [100, 19, 45], [101, 19, 46], [102, 19, 55], [103, 19, 65],
                      [104, 19, 76], [105, 19, 110], [106, 19, 57], [107, 60, 12], [108, 60, 24], [109, 60, 86],
                      [110, 60, 57], [111, 16, 8], [112, 16, 22], [113, 16, 26], [114, 16, 33], [115, 16, 36],
                      [116, 16, 38], [117, 16, 39], [118, 16, 41], [119, 16, 45], [120, 16, 65], [121, 16, 78],
                      [122, 16, 80], [123, 16, 98], [124, 16, 107], [125, 16, 110], [126, 16, 111], [127, 16, 10],
                      [128, 16, 57], [129, 17, 26], [130, 17, 33], [131, 17, 36], [132, 17, 39], [133, 17, 43],
                      [134, 17, 45], [135, 17, 52], [136, 17, 37], [137, 17, 65], [138, 17, 72], [139, 17, 76],
                      [140, 17, 78], [141, 17, 98], [142, 17, 107], [143, 17, 110], [144, 17, 111], [145, 17, 57],
                      [146, 3, 36], [147, 3, 41], [148, 3, 43], [149, 3, 37], [150, 3, 62], [151, 3, 71],
                      [152, 3, 72], [153, 3, 76], [154, 3, 87], [155, 3, 98], [156, 3, 108], [157, 3, 110],
                      [158, 3, 111], [159, 3, 57], [160, 0, 8], [161, 0, 31], [162, 0, 36], [163, 0, 39],
                      [164, 0, 45], [165, 0, 92], [166, 0, 100], [167, 0, 102], [168, 0, 48], [169, 0, 57],
                      [170, 58, 8], [171, 58, 36], [172, 58, 38], [173, 58, 57], [174, 18, 8], [175, 18, 26],
                      [176, 18, 34], [177, 18, 36], [178, 18, 39], [179, 18, 45], [180, 18, 65], [181, 18, 76],
                      [182, 18, 83], [183, 18, 110], [184, 18, 111], [185, 18, 57], [186, 6, 4], [187, 6, 21],
                      [188, 6, 25], [189, 6, 52], [190, 6, 76], [191, 6, 87], [192, 6, 111], [193, 6, 57],
                      [194, 62, 13], [195, 62, 75], [196, 62, 112], [197, 62, 57], [198, 47, 7], [199, 47, 15],
                      [200, 47, 23], [201, 47, 36], [202, 47, 41], [203, 47, 64], [204, 47, 66], [205, 47, 89],
                      [206, 47, 111], [207, 47, 57], [208, 24, 8], [209, 24, 36], [210, 24, 41], [211, 24, 58],
                      [212, 24, 114], [213, 24, 57], [214, 46, 7], [215, 46, 8], [216, 46, 15], [217, 46, 23],
                      [218, 46, 36], [219, 46, 41], [220, 46, 64], [221, 46, 66], [222, 46, 89], [223, 46, 57],
                      [224, 34, 5], [225, 34, 8], [226, 34, 36], [227, 34, 84], [228, 34, 99], [229, 34, 104],
                      [230, 34, 115], [231, 34, 57], [232, 35, 36], [233, 35, 114], [234, 35, 57], [235, 21, 26],
                      [236, 21, 40], [237, 21, 112], [238, 21, 57], [239, 59, 12], [240, 59, 49], [241, 59, 87],
                      [242, 59, 57], [243, 13, 41], [244, 13, 49], [245, 13, 87], [246, 13, 57], [247, 73, 8],
                      [248, 73, 36], [249, 73, 58], [250, 73, 73], [251, 73, 57], [252, 45, 36], [253, 45, 96],
                      [254, 45, 111], [255, 45, 48], [256, 45, 57], [257, 50, 15], [258, 50, 23], [259, 50, 36],
                      [260, 50, 89], [261, 50, 96], [262, 50, 111], [263, 50, 57], [264, 55, 3], [265, 55, 8],
                      [266, 55, 15], [267, 55, 23], [268, 55, 36], [269, 55, 51], [270, 55, 54], [271, 55, 67],
                      [272, 55, 57], [273, 51, 8], [274, 51, 14], [275, 51, 15], [276, 51, 23], [277, 51, 36],
                      [278, 51, 64], [279, 51, 89], [280, 51, 96], [281, 51, 111], [282, 51, 57], [283, 67, 8],
                      [284, 67, 36], [285, 67, 73], [286, 67, 75], [287, 67, 101], [288, 67, 103], [289, 67, 57],
                      [290, 74, 11], [291, 74, 36], [292, 74, 75], [293, 74, 82], [294, 74, 57], [295, 41, 8],
                      [296, 41, 20], [297, 41, 36], [298, 41, 41], [299, 41, 69], [300, 41, 85], [301, 41, 89],
                      [302, 41, 27], [303, 41, 111], [304, 41, 57], [305, 54, 7], [306, 54, 8], [307, 54, 23],
                      [308, 54, 36], [309, 54, 54], [310, 54, 67], [311, 54, 89], [312, 54, 57], [313, 20, 26],
                      [314, 20, 36], [315, 20, 38], [316, 20, 39], [317, 20, 45], [318, 20, 37], [319, 20, 65],
                      [320, 20, 76], [321, 20, 110], [322, 20, 111], [323, 20, 112], [324, 20, 57], [325, 10, 39],
                      [326, 10, 41], [327, 10, 58], [328, 10, 61], [329, 10, 57], [330, 42, 36], [331, 42, 50],
                      [332, 42, 95], [333, 42, 48], [334, 42, 111], [335, 42, 57], [336, 29, 2], [337, 29, 9],
                      [338, 29, 36], [339, 29, 90], [340, 29, 104], [341, 29, 57], [342, 23, 26], [343, 23, 45],
                      [344, 23, 65], [345, 23, 76], [346, 23, 112], [347, 23, 57], [348, 78, 36], [349, 78, 59],
                      [350, 78, 75], [351, 78, 57], [352, 26, 8], [353, 26, 36], [354, 26, 41], [355, 26, 57],
                      [356, 52, 8], [357, 52, 14], [358, 52, 15], [359, 52, 23], [360, 52, 36], [361, 52, 54],
                      [362, 52, 57], [363, 66, 8], [364, 66, 12], [365, 66, 36], [366, 66, 109], [367, 66, 57],
                      [368, 33, 1], [369, 33, 8], [370, 33, 30], [371, 33, 36], [372, 33, 41], [373, 33, 47],
                      [374, 33, 70], [375, 33, 57], [376, 43, 16], [377, 43, 36], [378, 43, 95], [379, 43, 111],
                      [380, 43, 115], [381, 43, 48], [382, 43, 57], [383, 63, 36], [384, 63, 58], [385, 63, 73],
                      [386, 63, 75], [387, 63, 109], [388, 63, 57], [389, 68, 12], [390, 68, 58], [391, 68, 59],
                      [392, 68, 57], [393, 64, 13], [394, 64, 36], [395, 64, 75], [396, 64, 57], [397, 49, 7],
                      [398, 49, 15], [399, 49, 23], [400, 49, 36], [401, 49, 41], [402, 49, 64], [403, 49, 66],
                      [404, 49, 91], [405, 49, 111], [406, 49, 57], [407, 69, 12], [408, 69, 36], [409, 69, 41],
                      [410, 69, 58], [411, 69, 75], [412, 69, 59], [413, 69, 57], [414, 12, 11], [415, 12, 63],
                      [416, 12, 75], [417, 12, 57], [418, 53, 7], [419, 53, 8], [420, 53, 14], [421, 53, 15],
                      [422, 53, 23], [423, 53, 36], [424, 53, 54], [425, 53, 67], [426, 53, 88], [427, 53, 89],
                      [428, 53, 57], [429, 72, 12], [430, 72, 36], [431, 72, 56], [432, 72, 58], [433, 72, 57],
                      [434, 65, 36], [435, 65, 68], [436, 65, 99], [437, 65, 57], [438, 48, 8], [439, 48, 14],
                      [440, 48, 15], [441, 48, 23], [442, 48, 36], [443, 48, 54], [444, 48, 57], [445, 76, 16],
                      [446, 76, 36], [447, 76, 58], [448, 76, 57], [449, 71, 12], [450, 71, 75], [451, 71, 111],
                      [452, 71, 57], [453, 36, 8], [454, 36, 28], [455, 36, 32], [456, 36, 36], [457, 36, 43],
                      [458, 36, 67], [459, 36, 76], [460, 36, 87], [461, 36, 93], [462, 36, 57], [463, 30, 0],
                      [464, 30, 8], [465, 30, 36], [466, 30, 41], [467, 30, 43], [468, 30, 67], [469, 30, 75],
                      [470, 30, 76], [471, 30, 93], [472, 30, 114], [473, 30, 57], [474, 31, 0], [475, 31, 8],
                      [476, 31, 32], [477, 31, 36], [478, 31, 43], [479, 31, 76], [480, 31, 93], [481, 31, 114],
                      [482, 31, 57], [483, 44, 36], [484, 44, 48], [485, 44, 111], [486, 44, 85], [487, 44, 57],
                      [488, 32, 2], [489, 32, 8], [490, 32, 9], [491, 32, 19], [492, 32, 35], [493, 32, 36],
                      [494, 32, 41], [495, 32, 44], [496, 32, 67], [497, 32, 81], [498, 32, 84], [499, 32, 90],
                      [500, 32, 104], [501, 32, 57], [502, 11, 36], [503, 11, 94], [504, 11, 97], [505, 11, 57],
                      [506, 28, 8], [507, 28, 18], [508, 28, 36], [509, 28, 39], [510, 28, 52], [511, 28, 58],
                      [512, 28, 60], [513, 28, 67], [514, 28, 116], [515, 28, 57], [516, 37, 8], [517, 37, 18],
                      [518, 37, 36], [519, 37, 41], [520, 37, 43], [521, 37, 49], [522, 37, 52], [523, 37, 76],
                      [524, 37, 93], [525, 37, 87], [526, 37, 111], [527, 37, 57], [528, 77, 8], [529, 77, 36],
                      [530, 77, 39], [531, 77, 45], [532, 77, 57], [533, 38, 8], [534, 38, 36], [535, 38, 41],
                      [536, 38, 99], [537, 38, 57], [538, 27, 0], [539, 27, 15], [540, 27, 36], [541, 27, 41],
                      [542, 27, 70], [543, 27, 105], [544, 27, 114], [545, 27, 57], [546, 70, 36], [547, 70, 59],
                      [548, 70, 75], [549, 70, 57], [550, 61, 12], [551, 61, 29], [552, 61, 58], [553, 61, 75],
                      [554, 61, 87], [555, 61, 93], [556, 61, 111]]
    new_corr = []
    for i, curr_corr in enumerate(correspondence):
        if curr_corr[2] > 49:
            curr_corr[2] = 49
        if curr_corr[1] > 77:
            curr_corr[1] = 77
        new_corr.append(curr_corr)
    print("new_corr:\n", new_corr)

    with open(os.path.join(result_dir, result_json), 'r') as f:
        all_results = json.load(f)

    # ranhou kaishi dui duqu daode json jieguo all_res zuo chuli
    """ TODO """
    # frame name example 3598080384_000001.jpg
    for idx, curr_frame in enumerate(all_results):
        frame_id = curr_frame['frame_id']
        video_folder = curr_frame['video_folder']
        video_id = curr_frame['video_id']
        width = curr_frame['width']
        height = curr_frame['height']
        person_box = curr_frame['person_box']
        object_box = curr_frame['object_box']
        person_id = curr_frame['person_id']  # what does that mean?
        object_id = curr_frame['object_id']
        object_class = curr_frame['object_class']
        action_class = curr_frame['action_class']

        output_dir = os.path.join(output_path, video_folder, video_id)
        if not os.path.isdir(output_dir):
            os.makedirs(output_dir)
        total_frames = idx
        print("total_frames:", total_frames)
        # xianzai wo xuyao gaoyixie jiegou ba zhexie xinxi cunchu qilai

        # haiyou yixie map
        with open('./slowfast/datasets/vidor/idx_to_pred.pkl', 'rb') as f:
            idx_to_pred = pickle.load(f)  # number 50
        with open('./slowfast/datasets/vidor/idx_to_obj.pkl', 'rb') as f:
            idx_to_obj = pickle.load(f)  # number 78
        with open('./slowfast/datasets/vidor/pred_to_idx.pkl', 'rb') as f:
            pred_to_idx = pickle.load(f)  # number 50
        with open('./slowfast/datasets/vidor/obj_to_idx.pkl', 'rb') as f:
            obj_to_idx = pickle.load(f)  # number 78
        # pred_to_idx

        datameta = curr_frame
        # output_json = os.path.join(output_dir, f'{video_id}.json')
        output_json = os.path.join(output_dir, f'{frame_id}.json')
        with open(output_json, 'w') as f:
            json.dump(datameta, f)




